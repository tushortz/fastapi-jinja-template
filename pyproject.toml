[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "project-template"
version = "0.0.1"
description = "A FastAPI-based web application for saving and managing projects"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = { extras = ["standard"], version = "^0.24.0" }
motor = "^3.3.2"
pymongo = "^4.6.0"
python-jose = { extras = ["cryptography"], version = "^3.3.0" }
passlib = { extras = ["bcrypt"], version = "^1.7.4" }
python-multipart = "^0.0.6"
jinja2 = "^3.1.2"
aiofiles = "^23.2.1"
pydantic = { extras = ["email"], version = "^2.5.0" }
pydantic-settings = "^2.1.0"
google-generativeai = "^0.3.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
httpx = "^0.25.2"
faker = "^20.1.0"
factory-boy = "^3.3.0"
ruff = "^0.1.6"
black = "^23.11.0"

[tool.poetry.scripts]
dev = "src.scripts:run_dev_server"
format = "src.scripts:format_code"
lint = "src.scripts:lint_code"
lint-fix = "src.scripts:lint_fix"
test = "src.scripts:run_tests"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["src/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
